# Rate limiting zones - 
# limit_zone - address - zone=custom_zone:memory_size - rate=custom_rate(r/m = raq/min)
limit_req_zone $binary_remote_addr zone=admin:10m rate=30r/m;    
limit_req_zone $binary_remote_addr zone=short_urls:10m rate=120r/m;  
limit_req_zone $binary_remote_addr zone=frontend:10m rate=120r/m;  

# Custom 429 error page
limit_req_status 429;


server {
    listen 80;

    
    # For few auth headers
    underscores_in_headers on;


    # API routes go to Django
    location /admin/ {
        limit_req zone=admin burst=3 nodelay;
        proxy_pass http://django:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/ {
        limit_req zone=short_urls;
        proxy_pass http://django:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # OTODO-1
    location /r/ {
        limit_req zone=short_urls;
        proxy_pass http://django:8000;  
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /f/ {
        limit_req zone=short_urls;
        proxy_pass http://django:8000;  
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }


    # Static files from Django (if needed)
    location /static/ {
        # NOTE: Enure the alias path matches that of the path of STATIC_ROOT, were they are collected
        alias /app/staticfiles/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Health check path for django
    location /health/ {
        proxy_pass http://django:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check path for nginx
    location /ping/ {
        return 200 "pong\n";
        add_header Content-Type text/plain;
        access_log off;  # Donâ€™t log health checks
    }

    # Bucket-name, if using self-hosting
    location /anon-files/ {
        proxy_pass http://s3:9000;
        client_max_body_size 110M;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;

        # Forward all S3 signing headers
        proxy_set_header x-amz-date $http_x_amz_date;
        proxy_set_header x-amz-signature $http_x_amz_signature;
        proxy_set_header Authorization $http_authorization;
        proxy_set_header x-amz-security-token $http_x_amz_security_token;
        proxy_set_header x-amz-content-sha256 $http_x_amz_content_sha256;

        proxy_pass_request_headers on;
        proxy_request_buffering off;
        proxy_buffering off;
        chunked_transfer_encoding off;
    }

    # All other requests go to Next.js
    location / {
        limit_req zone=frontend burst=100 nodelay;
        proxy_pass http://frontend:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }


    # Custom error page for rate limiting
    error_page 429 /rate_limit.html;
    location = /rate_limit.html {
        root /usr/share/nginx/html;
        internal;
    }
}
